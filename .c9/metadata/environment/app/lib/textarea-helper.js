{"filter":false,"title":"textarea-helper.js","tooltip":"/app/lib/textarea-helper.js","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":0,"column":0},"end":{"row":132,"column":19},"action":"insert","lines":["(function (factory) {","  'use strict';","  if (typeof define === 'function' && define.amd) {","      // AMD. Register as an anonymous module.","      define(['jquery'], factory);","  } else if (typeof module === 'object' && module.exports) {","      // Node/CommonJS","      module.exports = factory(require('jquery'));","  } else {","      // Browser globals","      factory(jQuery);","  }","}(function ($) {","  'use strict';","  var caretClass   = 'textarea-helper-caret'","    , dataKey      = 'textarea-helper'","","    // Styles that could influence size of the mirrored element.","    , mirrorStyles = [ ","                       // Box Styles.","                       'box-sizing', 'height', 'width', 'padding-bottom'","                     , 'padding-left', 'padding-right', 'padding-top'","  ","                       // Font stuff.","                     , 'font-family', 'font-size', 'font-style' ","                     , 'font-variant', 'font-weight'","  ","                       // Spacing etc.","                     , 'word-spacing', 'letter-spacing', 'line-height'","                     , 'text-decoration', 'text-indent', 'text-transform' ","                     ","                      // The direction.","                     , 'direction'","                     ];","","  var TextareaHelper = function (elem) {","    if (elem.nodeName.toLowerCase() !== 'textarea') return;","    this.$text = $(elem);","    this.$mirror = $('<div/>').css({ 'position'    : 'absolute'","                                   , 'overflow'    : 'auto'","                                   , 'white-space' : 'pre-wrap'","                                   , 'word-wrap'   : 'break-word'","                                   , 'top'         : 0","                                   , 'left'        : -9999","                                   }).insertAfter(this.$text);","  };","","  (function () {","    this.update = function () {","","      // Copy styles.","      var styles = {};","      for (var i = 0, style; style = mirrorStyles[i]; i++) {","        styles[style] = this.$text.css(style);","      }","      this.$mirror.css(styles).empty();","      ","      // Update content and insert caret.","      var caretPos = this.getOriginalCaretPos()","        , str      = this.$text.val()","        , pre      = document.createTextNode(str.substring(0, caretPos))","        , post     = document.createTextNode(str.substring(caretPos))","        , $car     = $('<span/>').addClass(caretClass).css('position', 'absolute').html('&nbsp;');","      this.$mirror.append(pre, $car, post)","                  .scrollTop(this.$text.scrollTop());","    };","","    this.destroy = function () {","      this.$mirror.remove();","      this.$text.removeData(dataKey);","      return null;","    };","","    this.caretPos = function () {","      this.update();","      var $caret = this.$mirror.find('.' + caretClass)","        , pos    = $caret.position();","      if (this.$text.css('direction') === 'rtl') {","        pos.right = this.$mirror.innerWidth() - pos.left - $caret.width();","        pos.left = 'auto';","      }","","      return pos;","    };","","    this.height = function () {","      this.update();","      this.$mirror.css('height', '');","      return this.$mirror.height();","    };","","    // XBrowser caret position","    // Adapted from http://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea","    this.getOriginalCaretPos = function () {","      var text = this.$text[0];","      if (text.selectionStart) {","        return text.selectionStart;","      } else if (document.selection) {","        text.focus();","        var r = document.selection.createRange();","        if (r == null) {","          return 0;","        }","        var re = text.createTextRange()","          , rc = re.duplicate();","        re.moveToBookmark(r.getBookmark());","        rc.setEndPoint('EndToStart', re);","        return rc.text.length;","      } ","      return 0;","    };","","  }).call(TextareaHelper.prototype);","  ","  $.fn.textareaHelper = function (method) {","    this.each(function () {","      var $this    = $(this)","        , instance = $this.data(dataKey);","      if (!instance) {","        instance = new TextareaHelper(this);","        $this.data(dataKey, instance);","      }","    });","    if (method) {","      var instance = this.first().data(dataKey);","      return instance[method]();","    } else {","      return this;","    }","  };","","}));","© 2020 GitHub, Inc."],"id":1}],[{"start":{"row":131,"column":4},"end":{"row":132,"column":19},"action":"remove","lines":["","© 2020 GitHub, Inc."],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":4},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":[" "],"id":5},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["g"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["l"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["o"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["a"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["b"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["a"]}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["a"],"id":6},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["b"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["a"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["b"],"id":7},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["a"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["l"]}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":[" "],"id":8},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["$"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":[","]}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":[" "],"id":9},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["j"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["Q"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["u"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["e"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["r"]}],[{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["y"],"id":10}],[{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":[" "],"id":11},{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["+"]},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["/"]}],[{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"remove","lines":["/"],"id":12},{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"remove","lines":["+"]}],[{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["*"],"id":13},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["/"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":22},"end":{"row":0,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1579156423931,"hash":"8e5d2c54aca6d2ab99f88dfff5c94d37a5f1661e"}